# If we want new dumps to be backward compatible we could:
# - comment out everything new
# - then evaluate every commented line to search one of the supported things (i.e. 'RW:<var.name>:<type>:<option>\n', 'CMD:<cmd.name>\n')
# However doing this would mean we won't be able to use parseconf (at least as it is now, since '#' lines are treated as comments and ignored)
#
# This is a comment and it's ignored everywhere
var.1: value
var.2: value
# This is a comment; still ignored everywhere
var.3: value
# var.3:COMMENT:
# This is a 'special' comment; it's ignored by nut's dummy-ups/whatever_will_replace_it but:
#
# - it'll be used by device dumps library generation tool to append a comment to *var.3*
# - it can contain simple http://asciidoc.org[asciidoc] markup
# - everything till +# var.3:EOC+ will be used
# - leading space after the +#+ will be removed
#
# ----
# a listing block
# ----
#
# var.3:EOC <- this line closes the comment
#RW:var.3:RANGE "min" "max"
# Another ignored-everywhere comment
#RW:var.3:RANGE "min1" "max2"
var.4: value
var.5: value
#RW:var5:STRING:LEN
var.6: value
#RW:var6:ENUM "value"
#RW:var6:ENUM "value2"
# Ignored comment; commands to follow
#CMD:command.1
#CMD:command.2
# An ignored comment..
#CMD:command.3
# CMD:command.3:COMMENT:
# Just like vars comment ignored by dummy-ups but used by device dumps library generation
#
# - _Still_ support *asciidoc*
# - It'll be appended to the command
#
# CMD:command.3:EOC
#CMD:command.4
# DEVICE:USER-COMMENT:
# Just like vars/commands comments but for the device/general annotations.
# DEVICE:EOC
# We may even want to add a 'tell us how much the device is well-supported in NUT' (numbers, e.g. 1-10, then we can use stars if we want in the device dumps library generation)
# DEVICE:SUPPORT-LEVEL:6
